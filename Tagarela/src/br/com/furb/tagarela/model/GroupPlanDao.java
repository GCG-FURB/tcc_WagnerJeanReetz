package br.com.furb.tagarela.model;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;
import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table GROUP_PLAN.
*/
public class GroupPlanDao extends AbstractDao<GroupPlan, Void> {

    public static final String TABLENAME = "GROUP_PLAN";

    /**
     * Properties of entity GroupPlan.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property ServerID = new Property(0, Integer.class, "serverID", false, "SERVER_ID");
        public final static Property HunterID = new Property(1, Integer.class, "hunterID", false, "HUNTER_ID");
        public final static Property PreyID = new Property(2, Integer.class, "preyID", false, "PREY_ID");
        public final static Property Name = new Property(3, String.class, "name", false, "NAME");
        public final static Property CustomText = new Property(4, String.class, "customText", false, "CUSTOM_TEXT");
    };


    public GroupPlanDao(DaoConfig config) {
        super(config);
    }
    
    public GroupPlanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'GROUP_PLAN' (" + //
                "'SERVER_ID' INTEGER," + // 0: serverID
                "'HUNTER_ID' INTEGER," + // 1: hunterID
                "'PREY_ID' INTEGER," + // 2: preyID
                "'NAME' TEXT," + // 3: name
                "'CUSTOM_TEXT' TEXT);"); // 4: customText
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'GROUP_PLAN'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, GroupPlan entity) {
        stmt.clearBindings();
 
        Integer serverID = entity.getServerID();
        if (serverID != null) {
            stmt.bindLong(1, serverID);
        }
 
        Integer hunterID = entity.getHunterID();
        if (hunterID != null) {
            stmt.bindLong(2, hunterID);
        }
 
        Integer preyID = entity.getPreyID();
        if (preyID != null) {
            stmt.bindLong(3, preyID);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(4, name);
        }
 
        String customText = entity.getCustomText();
        if (customText != null) {
            stmt.bindString(5, customText);
        }
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public GroupPlan readEntity(Cursor cursor, int offset) {
        GroupPlan entity = new GroupPlan( //
            cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0), // serverID
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // hunterID
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // preyID
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // name
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4) // customText
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, GroupPlan entity, int offset) {
        entity.setServerID(cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0));
        entity.setHunterID(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setPreyID(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setName(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setCustomText(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(GroupPlan entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(GroupPlan entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
